#+TITLE: Hello
#+AUTHOR: Daniel

* Customize the start of emacs
  ** Standard start of emacs

  #+begin_src emacs-lisp
  ;; Remove the startup message
  (setq inhibit-startup-message t)

  ;; Remove the menu and other elements
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (set-fringe-mode 10)
  (menu-bar-mode -1)

  (setq visible-bell t)
  #+end_src

  ** Basic keybinds
  
  #+begin_src emacs-lisp
  ;; Make ESC do what it should
  (global-set-key (kbd "<escape>") 'keyboard-escape-quit)
  (global-set-key (kbd "C-M-j") 'counsel-switch-buffer)
  #+end_src


  #+begin_src emacs-lisp
    ;; Remove the custom messages that shows up in this file
    (setq custom-file "~/.emacs.d/custom.el")
    (load custom-file)

    ;; Font setting
    (set-face-attribute 'default nil :font "UbuntuMono NF" :height 150)

    ;; Uncomment to see in messages what's available
    ;; (print (font-family-list))

    ;; Theme
    ;; (load-theme 'doom-gruvbox)

    ;; Initialize packages
    (require 'package)

    ;; The actual repos
    (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			     ("org" . "https://orgmode.org/elpa/")
			     ("elpa" . "https://elpa.gnu.org/packages/")))

    (package-initialize)
    (unless package-archive-contents
      (package-refresh-contents))

    ;; Install use-package if it's not installed
    (unless (package-installed-p 'use-package)
      (package-install 'use-package))

    (require 'use-package)
    (setq use-package-always-ensure t)

    (use-package doom-themes
      :init (load-theme 'doom-gruvbox t))

    ;; First time on a new machine you need to install the fonts. So run this command the first time:
    ;;
    ;; M-x all-the-icons-install-fonts
    (use-package all-the-icons)

    (use-package doom-modeline
      :init (doom-modeline-mode 1)
      :custom ((doom-modeline-height 10)))

    (use-package rainbow-delimiters
      :hook (prog-mode . rainbow-delimiters-mode))

    (use-package which-key
      :init (which-key-mode)
      :diminish which-key-mode
      :config
      (setq which-key-idle-delay 1))

    (use-package ivy-rich
      :init
      (ivy-rich-mode 1))

    (use-package counsel
      :bind (("M-x" . counsel-M-x)
	     ("C-x b" . counsel-ibuffer)
	     ("C-x C-f" . counsel-find-file)
	     :map minibuffer-local-map
	     ("C-r" . 'counsel-minibuffer-history)))
#+end_src

* Evil mode
  ** First the Evil package
#+begin_src emacs-lisp

    (use-package evil
	:ensure t
	:init
	(setq evil-want-integration t)
	(setq evil-want-keybinding nil)
	(setq evil-vsplit-window-right t)
	(setq evil-split-window-below t)
	(evil-mode))

#+end_src

  ** Evil collection!

#+begin_src emacs-lisp
  
  (use-package evil-collection
    :after evil
    :ensure t
    :config
    (evil-collection-init))

#+end_src  
